<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:converters="clr-namespace:TinyTODO.App.Windows.Converters"
                     xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        
                    >
    <Style TargetType="{x:Type ListBox}" x:Key="ToDoListStyle" >
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>


    <Style x:Key="ToDoItemControlSelector" TargetType="{x:Type ContentControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=DataType}" Value="0">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=PlainTextData}" BorderThickness="0"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DataType}" Value="1">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <xctk:RichTextBox Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=DockPanel}}" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" 
                                        MaxHeight="220" IsReadOnly="True" Text="{Binding Path=TextData, Mode=OneWay}"
                                              BorderThickness="0">
                                <xctk:RichTextBox.TextFormatter>
                                    <xctk:RtfFormatter />
                                </xctk:RichTextBox.TextFormatter>
                            </xctk:RichTextBox>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DataType}" Value="2">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=PlainTextData}" BorderThickness="0"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DataType}" Value="3">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Source="{Binding Image}" MaxHeight="200"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <DataTemplate x:Key="ToDoItemDataTemplate">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="True" Grid.Column="0" >
                <CheckBox IsChecked="{Binding IsCompleted}"/>
            </DockPanel>
            <DockPanel LastChildFill="True" MaxWidth="1500" Grid.Column="1" >
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <TextBlock Text="{Binding CreatedDateTime}"  Margin="5"/>
                        <TextBlock Text="{Binding ActiveWindowTitle}" Margin="5"/>
                </StackPanel>
                <ContentControl Content="{Binding .}" Style="{StaticResource ToDoItemControlSelector}" />
            </DockPanel>
        </Grid>
    </DataTemplate>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="ToDoListItemStyle">
        <Style.Resources>
            <converters:ToDoItemVisibilityConverter x:Key="ToDoItemVisibilityConverter" />
        </Style.Resources>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsCompleted}" Value="True">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ToDoItemVisibilityConverter}">
                    <Binding RelativeSource="{RelativeSource AncestorType=Window}" Path="DataContext.ShowCompleted" />
                    <Binding Path="IsCompleted"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>