<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:converters="clr-namespace:ToDoLite.App.Windows.Converters"
                     xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                     xmlns:viewModel="clr-namespace:ToDoLite.App.Windows.ViewModel">
    <converters:WidthMinusConverter x:Key="WidthMinusConverter"/>

    <Style TargetType="{x:Type ListBox}" x:Key="ToDoListStyle" >
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>


  <Style TargetType="{x:Type ContentControl}" x:Key="ToDoItemControlSelector" >
      <Style.Triggers>
            <DataTrigger Binding="{Binding Path=DataType}" Value="0" >
                <Setter Property="ContentTemplate">
                    <Setter.Value>
            <DataTemplate DataType="viewModel:ToDoItemViewModel">
                            <TextBox Text="{Binding Path=PlainTextData}" BorderThickness="0"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DataType}" Value="1">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
            <DataTemplate DataType="viewModel:ToDoItemViewModel">
                            <xctk:RichTextBox MaxHeight="220" Text="{Binding Path=TextData}"
                                              HorizontalAlignment="Left"
                                              BorderThickness="0"
                                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                                              ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <xctk:RichTextBox.TextFormatter>
                                    <xctk:RtfFormatter />
                                </xctk:RichTextBox.TextFormatter>
                            </xctk:RichTextBox>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DataType}" Value="2">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="viewModel:ToDoItemViewModel">
                            <TextBox  Text="{Binding Path=PlainTextData}" BorderThickness="0"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DataType}" Value="3">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="viewModel:ToDoItemViewModel">
                            <Image HorizontalAlignment="Left" Source="{Binding Image}" MaxHeight="220" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <DataTemplate x:Key="ToDoItemDataTemplate" DataType="viewModel:ToDoItemViewModel">
      <Border Padding="5" CornerRadius="2" BorderThickness="1" BorderBrush="Black" Margin="2">
        <Grid x:Name="foo" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="True" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  >
                    <CheckBox IsChecked="{Binding IsCompleted}" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" VerticalAlignment="Stretch"/>
            </DockPanel>
            <DockPanel Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, 
                Converter={StaticResource WidthMinusConverter}, ConverterParameter=100}" 
                       LastChildFill="True" HorizontalAlignment="Stretch" Grid.Column="1">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" >
                    <TextBlock Margin="5">
                            <Run Text="{Binding CreatedDateTimeFormatted, Mode=OneWay}" FontWeight="Bold" FontSize="13"/>
                            <Run Text="{Binding TimeDifference, Mode=OneWay}" FontWeight="SemiBold" FontSize="12"/>
                    </TextBlock>
                    <TextBlock Text="{Binding ActiveWindowTitle}" Margin="5"/>
                </StackPanel>
                <ContentControl HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Content="{Binding .}" Style="{StaticResource ToDoItemControlSelector}" />
            </DockPanel>
        <StackPanel Grid.Column="2">
          <Button Content="🗑" ToolTip="Delete item" CommandParameter="{Binding}" Command="{Binding Path=DataContext.DeleteItemCommand ,RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
        </StackPanel>
        </Grid>
        </Border>
    </DataTemplate>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="ToDoListItemStyle">
        <Style.Resources>
            <converters:ToDoItemVisibilityConverter x:Key="ToDoItemVisibilityConverter" />
        </Style.Resources>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsCompleted}" Value="True">
                <Setter Property="Opacity" Value="0.2" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ResourceKey=ToDoItemVisibilityConverter}">
                    <Binding RelativeSource="{RelativeSource AncestorType=Window}" Path="DataContext.ShowCompleted" />
                    <Binding Path="IsCompleted"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>